name: Release

on:
  push:
    tags:
      - 'V*'

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Clean previous builds
        run: |
          echo "üßπ Cleaning previous builds..."
          rm -rf dist/
          rm -rf release/
          mkdir -p release/

      - name: Build for Windows
        run: yarn package:windows
        env:
          NODE_ENV: production

      - name: Build for macOS
        run: yarn package:mac
        env:
          NODE_ENV: production

      - name: Build for Linux
        run: yarn package:linux
        env:
          NODE_ENV: production

      - name: List build artifacts
        run: |
          echo "üì¶ Build artifacts:"
          ls -la release/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## üöÄ Nova vers√£o do PromptMan

            **Vers√£o:** ${{ github.ref_name }}
            **Build ID:** ${{ github.run_id }}
            **Commit:** ${{ github.sha }}

            ### üì¶ Downloads dispon√≠veis:

            **Windows:**
            - PromptMan Setup (.exe) - Instalador para Windows
            - PromptMan Portable (.exe) - Vers√£o port√°til

            **macOS:**
            - PromptMan (.dmg) - Instalador para macOS
            - PromptMan (.zip) - Vers√£o compactada

            **Linux:**
            - PromptMan (.AppImage) - Execut√°vel universal
            - PromptMan (.deb) - Pacote Debian/Ubuntu
            - PromptMan (.rpm) - Pacote Red Hat/Fedora

            ### üîß Melhorias nesta vers√£o:
            - Builds otimizados para todas as plataformas
            - Melhor performance e estabilidade

            ### üìã Instru√ß√µes de instala√ß√£o:
            1. Baixe o arquivo apropriado para seu sistema operacional
            2. Execute o instalador ou extraia o arquivo
            3. Execute o PromptMan

            ### üêõ Reporte bugs:
            Se encontrar algum problema, por favor abra uma issue no GitHub.

      - name: Upload Windows Setup
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/PromptMan Setup ${{ github.ref_name }}.exe
          asset_name: PromptMan-Setup-${{ github.ref_name }}-Windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Windows Portable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/PromptMan ${{ github.ref_name }}.exe
          asset_name: PromptMan-Portable-${{ github.ref_name }}-Windows.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS DMG
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/PromptMan ${{ github.ref_name }}.dmg
          asset_name: PromptMan-${{ github.ref_name }}-macOS.dmg
          asset_content_type: application/octet-stream

      - name: Upload macOS ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/PromptMan ${{ github.ref_name }}-mac.zip
          asset_name: PromptMan-${{ github.ref_name }}-macOS.zip
          asset_content_type: application/zip

      - name: Upload Linux AppImage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/PromptMan ${{ github.ref_name }}.AppImage
          asset_name: PromptMan-${{ github.ref_name }}-Linux.AppImage
          asset_content_type: application/octet-stream

      - name: Upload Linux DEB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/promptman_${{ github.ref_name }}_amd64.deb
          asset_name: PromptMan-${{ github.ref_name }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload Linux RPM
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/promptman-${{ github.ref_name }}.x86_64.rpm
          asset_name: PromptMan-${{ github.ref_name }}-Linux.rpm
          asset_content_type: application/x-rpm

      - name: Notify success
        run: |
          echo "üéâ Release ${{ github.ref_name }} created successfully!"
          echo "üì¶ All artifacts uploaded to GitHub Releases"
          echo "üîó Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref }}"
